x-superset-image: &superset-image apache/superset:${TAG:-latest-dev}
x-superset-build: &superset-build
                  context: .
                  dockerfile: Dockerfile
x-superset-depends-on: &superset-depends-on
  - db
  - redis
x-superset-volumes: &superset-volumes
  - ./docker:/app/docker
  - superset_home:/app/superset_home
  - ./duckdb-config:/home/superset/duckdb
  - ./duckdb-config/.duckdbrc:/home/superset/.duckdbrc
  - ./duckdb-config/.duckdbrc:/root/.duckdbrc

version: "3.7"
services:
  redis:
    image: redis:7
    container_name: superset_cache
    networks:
      iceberg_net:
    restart: unless-stopped
    volumes:
      - redis:/data

  db:
    env_file: docker/.env
    image: postgres:14
    container_name: superset_db
    networks:
      iceberg_net:
    restart: unless-stopped
    volumes:
      - db_home:/var/lib/postgresql/data

  superset:
    env_file: docker/.env
    build: *superset-build
    container_name: superset_app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    networks:
      iceberg_net:
    ports:
      - 8089:8088
    depends_on: *superset-depends-on
    volumes: *superset-volumes

  superset-init:
    build: *superset-build
    container_name: superset_init
    command: ["/app/docker/docker-init.sh"]
    env_file: docker/.env
    networks:
      iceberg_net:
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      disable: true

  superset-worker:
    build: *superset-build
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: docker/.env
    networks:
      iceberg_net:
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      test: ["CMD-SHELL", "celery -A superset.tasks.celery_app:app inspect ping -d celery@$$HOSTNAME"]

  superset-worker-beat:
    build: *superset-build
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: docker/.env
    networks:
      iceberg_net:
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      disable: true

volumes:
  superset_home:
    external: false
  db_home:
    external: false
  redis:
    external: false
    
networks:
  iceberg_net:
    name: iceberg-net
    external: true
